{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\WebDev\\\\Projects\\\\Tutorial Projects\\\\React Router\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// DONE\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from './components/pages/Home';\nimport EventsPage, { loader as eventsLoader } from './components/pages/Events';\nimport EventDetailPage, { loader as eventDetailLoader, action as deleteEventAction } from './components/pages/EventDetail';\nimport NewEventPage from './components/pages/NewEvent';\nimport EditEventPage from './components/pages/EditEvent';\nimport RootLayout from './components/Root';\nimport EventsRootLayout from './components/pages/EventsRoot';\nimport ErrorPage from './components/pages/Error';\nimport { action as manipulateEventAction } from './components/EventForm';\nimport NewsletterPage, { action as newsletterAction } from './components/NewsLetter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this),\n    children: [{\n      index: true,\n      path: '',\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 43\n      }, this)\n    }, {\n      path: 'events',\n      element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 24\n        }, this),\n        loader: eventsLoader\n      }, {\n        path: ':eventId',\n        id: 'event-detail',\n        loader: eventDetailLoader,\n        children: [{\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 28\n          }, this),\n          action: deleteEventAction\n        }, {\n          path: 'edit',\n          element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 28\n          }, this),\n          action: manipulateEventAction\n        }]\n      }, {\n        path: 'new',\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this),\n        action: manipulateEventAction\n      }]\n    }, {\n      path: 'newsletter',\n      element: /*#__PURE__*/_jsxDEV(NewsletterPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this),\n      action: newsletterAction\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","EventsPage","loader","eventsLoader","EventDetailPage","eventDetailLoader","action","deleteEventAction","NewEventPage","EditEventPage","RootLayout","EventsRootLayout","ErrorPage","manipulateEventAction","NewsletterPage","newsletterAction","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","_c","$RefreshReg$"],"sources":["C:/Users/PC/Documents/WebDev/Projects/Tutorial Projects/React Router/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// DONE\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from './components/pages/Home';\nimport EventsPage, { loader as eventsLoader } from './components/pages/Events';\nimport EventDetailPage, {\n  loader as eventDetailLoader,\n  action as deleteEventAction,\n} from './components/pages/EventDetail';\nimport NewEventPage from './components/pages/NewEvent';\nimport EditEventPage from './components/pages/EditEvent';\nimport RootLayout from './components/Root';\nimport EventsRootLayout from './components/pages/EventsRoot';\nimport ErrorPage from './components/pages/Error';\nimport { action as manipulateEventAction } from './components/EventForm';\nimport NewsletterPage, {\n  action as newsletterAction,\n} from './components/NewsLetter';\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: '/',\n      element: <RootLayout />,\n      errorElement: <ErrorPage />,\n      children: [\n        { index: true, path: '', element: <HomePage /> },\n        {\n          path: 'events',\n          element: <EventsRootLayout />,\n          children: [\n            {\n              index: true,\n              element: <EventsPage />,\n              loader: eventsLoader,\n            },\n            {\n              path: ':eventId',\n              id: 'event-detail',\n              loader: eventDetailLoader,\n              children: [\n                {\n                  index: true,\n                  element: <EventDetailPage />,\n                  action: deleteEventAction,\n                },\n                {\n                  path: 'edit',\n                  element: <EditEventPage />,\n                  action: manipulateEventAction,\n                },\n              ],\n            },\n            {\n              path: 'new',\n              element: <NewEventPage />,\n              action: manipulateEventAction,\n            },\n          ],\n        },\n        {\n          path: 'newsletter',\n          element: <NewsletterPage />,\n          action: newsletterAction,\n        },\n      ],\n    },\n  ]);\n\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}