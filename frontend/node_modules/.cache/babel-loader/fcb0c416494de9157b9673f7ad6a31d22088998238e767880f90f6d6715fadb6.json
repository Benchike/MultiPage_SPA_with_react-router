{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\WebDev\\\\Projects\\\\Tutorial Projects\\\\React Router\\\\12-adv-starting-project\\\\frontend\\\\src\\\\components\\\\pages\\\\Events.jsx\",\n  _s = $RefreshSig$();\nimport EventsList from '../EventsList';\nimport { json, useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events' };\n    // eslint-disable-next-line no-throw-literal\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n    //   status: 500,\n    // });\n    return json({\n      message: 'Could not fetch events.'\n    }), {\n      status: 500\n    };\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","json","useLoaderData","jsxDEV","_jsxDEV","EventsPage","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/PC/Documents/WebDev/Projects/Tutorial Projects/React Router/12-adv-starting-project/frontend/src/components/pages/Events.jsx"],"sourcesContent":["import EventsList from '../EventsList';\r\nimport { json, useLoaderData } from 'react-router-dom';\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n  // if (data.isError) {\r\n  //   return <p>{data.message}</p>;\r\n  // }\r\n\r\n  const events = data.events;\r\n\r\n  return <EventsList events={events} />;\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!response.ok) {\r\n    // return { isError: true, message: 'Could not fetch events' };\r\n    // eslint-disable-next-line no-throw-literal\r\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\r\n    //   status: 500,\r\n    // });\r\n    return (\r\n      json({ message: 'Could not fetch events.' }),\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,eAAe;AACtC,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGL,aAAa,CAAC,CAAC;EAC5B;EACA;EACA;;EAEA,MAAMM,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,oBAAOJ,OAAA,CAACJ,UAAU;IAACQ,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACN,EAAA,CATQD,UAAU;EAAA,QACJH,aAAa;AAAA;AAAAW,EAAA,GADnBR,UAAU;AAWnB,eAAeA,UAAU;AAEzB,OAAO,eAAeS,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA;IACA,OACEhB,IAAI,CAAC;MAAEiB,OAAO,EAAE;IAA0B,CAAC,CAAC,EAC5C;MACEC,MAAM,EAAE;IACV,CAAC;EAEL,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAF,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}